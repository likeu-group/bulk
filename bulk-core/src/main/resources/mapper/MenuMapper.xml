<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cool.likeu.bulk.repo.dao.MenuDao">

  <!-- MenuPO ResultMap -->
  <resultMap id="BaseResultMap" type="cool.likeu.bulk.repo.po.MenuPO">
    <id column="menu_id" jdbcType="BIGINT" property="menuId" />
    <result column="paren_id" jdbcType="BIGINT" property="parenId" />
    <result column="menu_icon" jdbcType="VARCHAR" property="menuIcon" />
    <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
    <result column="menu_url" jdbcType="VARCHAR" property="menuUrl" />
    <result column="menu_type" jdbcType="INTEGER" property="menuType" />
    <result column="menu_order" jdbcType="INTEGER" property="menuOrder" />
    <result column="menu_status" jdbcType="INTEGER" property="menuStatus" />
    <result column="menu_perms" jdbcType="VARCHAR" property="menuPerms" />
    <result column="menu_method" jdbcType="VARCHAR" property="menuMethod" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Base_Column_List">
    menu_id, paren_id, menu_icon, menu_name, menu_url, menu_type, menu_order, menu_status,
    menu_perms, menu_method, create_time, modify_time
  </sql>

  <select id="selectByExample" parameterType="cool.likeu.bulk.repo.po.MenuPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bulk_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from bulk_menu
    where menu_id = #{menuId,jdbcType=BIGINT}
  </select>

  <select id="selectByRoleId" resultMap="BaseResultMap">
    select
        m.menu_id,
        m.paren_id,
        m.menu_icon,
        m.menu_name,
        m.menu_url,
        m.menu_type,
        m.menu_order,
        m.menu_status,
        m.menu_perms,
        m.menu_method,
        m.create_time,
        m.modify_time
    from bulk_menu m
    inner join bulk_role_menu brm
    on m.menu_id = brm.menu_id
    where brm.role_id = #{roleId,jdbcType=BIGINT}
  </select>

  <delete id="deleteByMenuId" parameterType="java.lang.Long">
    delete from bulk_menu
    where menu_id = #{menuId,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="cool.likeu.bulk.repo.po.MenuPO">
    insert into bulk_menu (menu_id, paren_id, menu_icon,
      menu_name, menu_url, menu_type,
      menu_order, menu_status, menu_perms,
      menu_method, create_time, modify_time
      )
    values (#{menuId,jdbcType=BIGINT}, #{parenId,jdbcType=BIGINT}, #{menuIcon,jdbcType=VARCHAR},
      #{menuName,jdbcType=VARCHAR}, #{menuUrl,jdbcType=VARCHAR}, #{menuType,jdbcType=INTEGER},
      #{menuOrder,jdbcType=INTEGER}, #{menuStatus,jdbcType=INTEGER}, #{menuPerms,jdbcType=VARCHAR},
      #{menuMethod,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}
      )
  </insert>

  <insert id="insertSelective" parameterType="cool.likeu.bulk.repo.po.MenuPO">
    insert into bulk_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        menu_id,
      </if>
      <if test="parenId != null">
        paren_id,
      </if>
      <if test="menuIcon != null">
        menu_icon,
      </if>
      <if test="menuName != null">
        menu_name,
      </if>
      <if test="menuUrl != null">
        menu_url,
      </if>
      <if test="menuType != null">
        menu_type,
      </if>
      <if test="menuOrder != null">
        menu_order,
      </if>
      <if test="menuStatus != null">
        menu_status,
      </if>
      <if test="menuPerms != null">
        menu_perms,
      </if>
      <if test="menuMethod != null">
        menu_method,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="menuId != null">
        #{menuId,jdbcType=BIGINT},
      </if>
      <if test="parenId != null">
        #{parenId,jdbcType=BIGINT},
      </if>
      <if test="menuIcon != null">
        #{menuIcon,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null">
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null">
        #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="menuType != null">
        #{menuType,jdbcType=INTEGER},
      </if>
      <if test="menuOrder != null">
        #{menuOrder,jdbcType=INTEGER},
      </if>
      <if test="menuStatus != null">
        #{menuStatus,jdbcType=INTEGER},
      </if>
      <if test="menuPerms != null">
        #{menuPerms,jdbcType=VARCHAR},
      </if>
      <if test="menuMethod != null">
        #{menuMethod,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>

  <update id="updateByExampleSelective" parameterType="map">
    update bulk_menu
    <set>
      <if test="record.menuId != null">
        menu_id = #{record.menuId,jdbcType=BIGINT},
      </if>
      <if test="record.parenId != null">
        paren_id = #{record.parenId,jdbcType=BIGINT},
      </if>
      <if test="record.menuIcon != null">
        menu_icon = #{record.menuIcon,jdbcType=VARCHAR},
      </if>
      <if test="record.menuName != null">
        menu_name = #{record.menuName,jdbcType=VARCHAR},
      </if>
      <if test="record.menuUrl != null">
        menu_url = #{record.menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.menuType != null">
        menu_type = #{record.menuType,jdbcType=INTEGER},
      </if>
      <if test="record.menuOrder != null">
        menu_order = #{record.menuOrder,jdbcType=INTEGER},
      </if>
      <if test="record.menuStatus != null">
        menu_status = #{record.menuStatus,jdbcType=INTEGER},
      </if>
      <if test="record.menuPerms != null">
        menu_perms = #{record.menuPerms,jdbcType=VARCHAR},
      </if>
      <if test="record.menuMethod != null">
        menu_method = #{record.menuMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        modify_time = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByExample" parameterType="map">
    update bulk_menu
    set menu_id = #{record.menuId,jdbcType=BIGINT},
      paren_id = #{record.parenId,jdbcType=BIGINT},
      menu_icon = #{record.menuIcon,jdbcType=VARCHAR},
      menu_name = #{record.menuName,jdbcType=VARCHAR},
      menu_url = #{record.menuUrl,jdbcType=VARCHAR},
      menu_type = #{record.menuType,jdbcType=INTEGER},
      menu_order = #{record.menuOrder,jdbcType=INTEGER},
      menu_status = #{record.menuStatus,jdbcType=INTEGER},
      menu_perms = #{record.menuPerms,jdbcType=VARCHAR},
      menu_method = #{record.menuMethod,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      modify_time = #{record.modifyTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="cool.likeu.bulk.repo.po.MenuPO">
    update bulk_menu
    <set>
      <if test="parenId != null">
        paren_id = #{parenId,jdbcType=BIGINT},
      </if>
      <if test="menuIcon != null">
        menu_icon = #{menuIcon,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null">
        menu_name = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null">
        menu_url = #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="menuType != null">
        menu_type = #{menuType,jdbcType=INTEGER},
      </if>
      <if test="menuOrder != null">
        menu_order = #{menuOrder,jdbcType=INTEGER},
      </if>
      <if test="menuStatus != null">
        menu_status = #{menuStatus,jdbcType=INTEGER},
      </if>
      <if test="menuPerms != null">
        menu_perms = #{menuPerms,jdbcType=VARCHAR},
      </if>
      <if test="menuMethod != null">
        menu_method = #{menuMethod,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where menu_id = #{menuId,jdbcType=BIGINT}
  </update>

</mapper>
